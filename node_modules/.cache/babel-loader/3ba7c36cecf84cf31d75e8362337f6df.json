{"ast":null,"code":"var _jsxFileName = \"/home/jv/Desktop/Salvioni/react/login-auth-useContext/src/Pages/Login/index.js\";\nimport React, { useState } from 'react';\nimport { loginUser, useAuthState, useAuthDispatch } from '../../Context';\nimport styles from './login.module.css';\n\nfunction Login(props) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useAuthDispatch();\n  const {\n    loading,\n    errorMessage\n  } = useAuthState();\n\n  const handleLogin = async e => {\n    e.preventDefault();\n\n    try {\n      let response = await loginUser(dispatch, {\n        email,\n        password\n      });\n      if (!response.user) return;\n      props.history.push('/dashboard');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: {\n      width: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, \"Login Page\"), errorMessage ? /*#__PURE__*/React.createElement(\"p\", {\n    className: styles.error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, errorMessage) : null, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loginForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loginFormItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.loginFormItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogin,\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 6\n    }\n  }, \"login\"))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/jv/Desktop/Salvioni/react/login-auth-useContext/src/Pages/Login/index.js"],"names":["React","useState","loginUser","useAuthState","useAuthDispatch","styles","Login","props","email","setEmail","password","setPassword","dispatch","loading","errorMessage","handleLogin","e","preventDefault","response","user","history","push","error","console","log","container","width","loginForm","loginFormItem","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport { loginUser, useAuthState, useAuthDispatch } from '../../Context';\nimport styles from './login.module.css';\n\nfunction Login(props) {\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\n\tconst dispatch = useAuthDispatch();\n\tconst { loading, errorMessage } = useAuthState();\n\n\tconst handleLogin = async (e) => {\n\t\te.preventDefault();\n\n\t\ttry {\n\t\t\tlet response = await loginUser(dispatch, { email, password });\n\t\t\tif (!response.user) return;\n\t\t\tprops.history.push('/dashboard');\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={{ width: 200 }}>\n\t\t\t\t<h1>Login Page</h1>\n\t\t\t\t{errorMessage ? <p className={styles.error}>{errorMessage}</p> : null}\n\t\t\t\t<form>\n\t\t\t\t\t<div className={styles.loginForm}>\n\t\t\t\t\t\t<div className={styles.loginFormItem}>\n\t\t\t\t\t\t\t<label htmlFor='email'>Username</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\tid='email'\n\t\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.loginFormItem}>\n\t\t\t\t\t\t\t<label htmlFor='password'>Password</label>\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\t\tid='password'\n\t\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t\t\tdisabled={loading}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button onClick={handleLogin} disabled={loading}>\n\t\t\t\t\t\tlogin\n\t\t\t\t\t</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}