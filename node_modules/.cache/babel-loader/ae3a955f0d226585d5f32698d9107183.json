{"ast":null,"code":"import React, { useState, useReducer } from 'react';\nlet user = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')).user : '';\nlet token = localStorage.getItem('currentUser') ? JSON.parse(localStorage.getItem('currentUser')).auth_token : '';\nexport const initialState = {\n  user: '' || user,\n  token: '' || token,\n  loading: false,\n  errorMessage: null\n};\nexport const AuthReducer = (initialState, action) => {\n  switch (action.type) {\n    case 'REQUEST_LOGIN':\n      return { ...initialState,\n        loading: true\n      };\n\n    case 'LOGIN_SUCCESS':\n      return { ...initialState,\n        user: action.payload.user,\n        token: action.payload.auth_token,\n        loading: false\n      };\n\n    case 'LOGOUT':\n      return { ...initialState,\n        user: '',\n        token: ''\n      };\n\n    case 'LOGIN_ERROR':\n      return { ...initialState,\n        loading: false,\n        errorMessage: action.error\n      };\n\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`);\n  }\n};","map":{"version":3,"sources":["/home/jv/Desktop/Salvioni/react/login-react/src/Context/reducer.js"],"names":["React","useState","useReducer","user","localStorage","getItem","JSON","parse","token","auth_token","initialState","loading","errorMessage","AuthReducer","action","type","payload","error","Error"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AAEA,IAAIC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,aAArB,IACRC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,EAAgDF,IADxC,GAER,EAFH;AAGA,IAAIK,KAAK,GAAGJ,YAAY,CAACC,OAAb,CAAqB,aAArB,IACTC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,EAAgDI,UADvC,GAET,EAFH;AAIA,OAAO,MAAMC,YAAY,GAAG;AAC3BP,EAAAA,IAAI,EAAE,MAAMA,IADe;AAE3BK,EAAAA,KAAK,EAAE,MAAMA,KAFc;AAG3BG,EAAAA,OAAO,EAAE,KAHkB;AAI3BC,EAAAA,YAAY,EAAE;AAJa,CAArB;AAOP,OAAO,MAAMC,WAAW,GAAG,CAACH,YAAD,EAAeI,MAAf,KAA0B;AACpD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,eAAL;AACC,aAAO,EACN,GAAGL,YADG;AAENC,QAAAA,OAAO,EAAE;AAFH,OAAP;;AAID,SAAK,eAAL;AACC,aAAO,EACN,GAAGD,YADG;AAENP,QAAAA,IAAI,EAAEW,MAAM,CAACE,OAAP,CAAeb,IAFf;AAGNK,QAAAA,KAAK,EAAEM,MAAM,CAACE,OAAP,CAAeP,UAHhB;AAINE,QAAAA,OAAO,EAAE;AAJH,OAAP;;AAMD,SAAK,QAAL;AACC,aAAO,EACN,GAAGD,YADG;AAENP,QAAAA,IAAI,EAAE,EAFA;AAGNK,QAAAA,KAAK,EAAE;AAHD,OAAP;;AAMD,SAAK,aAAL;AACC,aAAO,EACN,GAAGE,YADG;AAENC,QAAAA,OAAO,EAAE,KAFH;AAGNC,QAAAA,YAAY,EAAEE,MAAM,CAACG;AAHf,OAAP;;AAMD;AACC,YAAM,IAAIC,KAAJ,CAAW,0BAAyBJ,MAAM,CAACC,IAAK,EAAhD,CAAN;AA5BF;AA8BA,CA/BM","sourcesContent":["import React, { useState, useReducer } from 'react';\n\nlet user = localStorage.getItem('currentUser')\n\t? JSON.parse(localStorage.getItem('currentUser')).user\n\t: '';\nlet token = localStorage.getItem('currentUser')\n\t? JSON.parse(localStorage.getItem('currentUser')).auth_token\n\t: '';\n\nexport const initialState = {\n\tuser: '' || user,\n\ttoken: '' || token,\n\tloading: false,\n\terrorMessage: null,\n};\n\nexport const AuthReducer = (initialState, action) => {\n\tswitch (action.type) {\n\t\tcase 'REQUEST_LOGIN':\n\t\t\treturn {\n\t\t\t\t...initialState,\n\t\t\t\tloading: true,\n\t\t\t};\n\t\tcase 'LOGIN_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...initialState,\n\t\t\t\tuser: action.payload.user,\n\t\t\t\ttoken: action.payload.auth_token,\n\t\t\t\tloading: false,\n\t\t\t};\n\t\tcase 'LOGOUT':\n\t\t\treturn {\n\t\t\t\t...initialState,\n\t\t\t\tuser: '',\n\t\t\t\ttoken: '',\n\t\t\t};\n\n\t\tcase 'LOGIN_ERROR':\n\t\t\treturn {\n\t\t\t\t...initialState,\n\t\t\t\tloading: false,\n\t\t\t\terrorMessage: action.error,\n\t\t\t};\n\n\t\tdefault:\n\t\t\tthrow new Error(`Unhandled action type: ${action.type}`);\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}