{"ast":null,"code":"const ROOT_URL = \"http://localhost:4000\";\nexport async function loginUser(dispatch, loginPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(loginPayload)\n  };\n\n  try {\n    dispatch({\n      type: \"REQUEST_LOGIN\"\n    });\n    let response = await fetch(`${ROOT_URL}/users/singin`, requestOptions);\n    let data = await response.json();\n\n    if (data.user) {\n      dispatch({\n        type: \"LOGIN_SUCCESS\",\n        payload: data\n      });\n      localStorage.setItem(\"currentUser\", JSON.stringify(data));\n      return data;\n    }\n\n    dispatch({\n      type: \"LOGIN_ERROR\",\n      error: data.errors[0]\n    });\n    console.log(data.errors[0]);\n    return;\n  } catch (error) {\n    dispatch({\n      type: \"LOGIN_ERROR\",\n      error: error\n    });\n    console.log(error);\n  }\n}\nexport async function logout(dispatch) {\n  dispatch({\n    type: \"LOGOUT\"\n  });\n  localStorage.removeItem(\"currentUser\");\n  localStorage.removeItem(\"token\");\n}","map":{"version":3,"sources":["/home/jv/Desktop/Salvioni/react/login-auth-useContext/src/Context/actions.js"],"names":["ROOT_URL","loginUser","dispatch","loginPayload","requestOptions","method","headers","body","JSON","stringify","type","response","fetch","data","json","user","payload","localStorage","setItem","error","errors","console","log","logout","removeItem"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,uBAAjB;AAEA,OAAO,eAAeC,SAAf,CAAyBC,QAAzB,EAAmCC,YAAnC,EAAiD;AACtD,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,YAAf;AAHe,GAAvB;;AAMA,MAAI;AACFD,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,QAAS,eAAb,EAA6BI,cAA7B,CAA1B;AACA,QAAIS,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;;AAEA,QAAID,IAAI,CAACE,IAAT,EAAe;AACbb,MAAAA,QAAQ,CAAC;AAAEQ,QAAAA,IAAI,EAAE,eAAR;AAAyBM,QAAAA,OAAO,EAAEH;AAAlC,OAAD,CAAR;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCV,IAAI,CAACC,SAAL,CAAeI,IAAf,CAApC;AACA,aAAOA,IAAP;AACD;;AAEDX,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,aAAR;AAAuBS,MAAAA,KAAK,EAAEN,IAAI,CAACO,MAAL,CAAY,CAAZ;AAA9B,KAAD,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,IAAI,CAACO,MAAL,CAAY,CAAZ,CAAZ;AACA;AACD,GAdD,CAcE,OAAOD,KAAP,EAAc;AACdjB,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,aAAR;AAAuBS,MAAAA,KAAK,EAAEA;AAA9B,KAAD,CAAR;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD;AACF;AAED,OAAO,eAAeI,MAAf,CAAsBrB,QAAtB,EAAgC;AACrCA,EAAAA,QAAQ,CAAC;AAAEQ,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAR;AACAO,EAAAA,YAAY,CAACO,UAAb,CAAwB,aAAxB;AACAP,EAAAA,YAAY,CAACO,UAAb,CAAwB,OAAxB;AACD","sourcesContent":["const ROOT_URL = \"http://localhost:4000\";\n\nexport async function loginUser(dispatch, loginPayload) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(loginPayload),\n  };\n\n  try {\n    dispatch({ type: \"REQUEST_LOGIN\" });\n    let response = await fetch(`${ROOT_URL}/users/singin`, requestOptions);\n    let data = await response.json();\n\n    if (data.user) {\n      dispatch({ type: \"LOGIN_SUCCESS\", payload: data });\n      localStorage.setItem(\"currentUser\", JSON.stringify(data));\n      return data;\n    }\n\n    dispatch({ type: \"LOGIN_ERROR\", error: data.errors[0] });\n    console.log(data.errors[0]);\n    return;\n  } catch (error) {\n    dispatch({ type: \"LOGIN_ERROR\", error: error });\n    console.log(error);\n  }\n}\n\nexport async function logout(dispatch) {\n  dispatch({ type: \"LOGOUT\" });\n  localStorage.removeItem(\"currentUser\");\n  localStorage.removeItem(\"token\");\n}\n"]},"metadata":{},"sourceType":"module"}